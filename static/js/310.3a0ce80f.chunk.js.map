{"version":3,"file":"static/js/310.3a0ce80f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesPageForm/movies-page-form.module.css?e286","components/MoviesPageForm/MoviesPageForm.jsx","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","webpack://react-homework-template/./src/shared/components/Movies/Movies.module.css?269d","shared/components/Movies/Movies.jsx","shared/services/movies-search-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"movies-page-form_form__XjwUU\",\"input\":\"movies-page-form_input__NYtxt\",\"searchBtn\":\"movies-page-form_searchBtn__vsM7e\"};","import { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\n\nimport css from './movies-page-form.module.css';\n\nconst MoviesPageForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() !== '') {\n      onSubmit(query);\n    }\n\n    setQuery('');\n  };\n\n  const onChange = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  return (\n    <form onSubmit={onFormSubmit} className={css.form}>\n      <input\n        className={css.input}\n        onChange={onChange}\n        type=\"text\"\n        value={query}\n        placeholder=\"Type movie\"\n      />\n      <button className={css.searchBtn} type=\"submit\">\n        <BsSearch size=\"16px\" color=\"#fff\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MoviesPageForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesWrap\":\"MoviesPage_moviesWrap__sxRco\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TailSpin } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n\nimport Movies from 'shared/components/Movies/Movies';\nimport MoviesPageForm from 'components/MoviesPageForm/MoviesPageForm';\n\nimport { fetchMoviesByName } from 'shared/services/movies-search-api';\n\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmit = query => {\n    if (query === currentQuery)\n      return toast.warn('Search for this query has already been completed');\n\n    setSearchParams({ query });\n  };\n\n  const currentQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!currentQuery) return;\n\n    const searchMovieByName = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMoviesByName(currentQuery);\n        setMovies(results);\n      } catch ({ message }) {\n        toast.error('Oops, something went wrong. Try reloading the page');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMovieByName();\n  }, [currentQuery]);\n\n  return (\n    <div className={css.moviesWrap}>\n      <MoviesPageForm onSubmit={onSubmit} />\n\n      {isLoading && <TailSpin width=\"50\" color=\"#fff\" wrapperClass=\"spinner\" />}\n\n      <Movies movies={movies} />\n    </div>\n  );\n};\n\nexport default MoviesPage;","// extracted by mini-css-extract-plugin\nexport default {\"moviesWrap\":\"Movies_moviesWrap__3msCr\",\"link\":\"Movies_link__A7qle\",\"img\":\"Movies_img__-7pxA\",\"text\":\"Movies_text__zkjiS\",\"filmInfoWrap\":\"Movies_filmInfoWrap__I3kog\",\"movie\":\"Movies_movie__8oebh\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport defaultPoster from 'shared/images/default-movie.jpg';\n\nimport css from './Movies.module.css';\n\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n  console.log(movies);\n\n  const moviesList = movies.map(({ id, title, poster_path, release_date }) => (\n    <li className={css.movie} key={id}>\n      <Link\n        className={css.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        <img\n          className={css.img}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : defaultPoster\n          }\n          alt=\"poster\"\n        />\n        <div className={css.filmInfoWrap}>\n          <p className={css.text}>{title}</p>\n          <p className={css.text}>{`Release data: ${release_date.replaceAll(\n            '-',\n            '.'\n          )}`}</p>\n        </div>\n      </Link>\n    </li>\n  ));\n\n  return <ul className={css.moviesWrap}>{moviesList}</ul>;\n};\n\nexport default Movies;\n\nMovies.defaultProps = {\n  movies: [],\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n"],"names":["onSubmit","useState","query","setQuery","e","preventDefault","trim","className","css","onChange","target","value","type","placeholder","size","color","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","currentQuery","get","useEffect","searchMovieByName","fetchMoviesByName","results","message","toast","width","wrapperClass","Movies","location","useLocation","console","log","moviesList","map","id","title","poster_path","release_date","to","state","from","src","defaultPoster","alt","replaceAll","defaultProps","instance","axios","baseURL","params","api_key","fetchTrendingMovies","data","fetchMovieById","fetchMovieReviews","fetchMovieCast"],"sourceRoot":""}