{"version":3,"file":"static/js/201.ceb90af3.chunk.js","mappings":"6PACA,EAAuB,0B,mBCKjBA,EAAa,SAAC,GAAc,IAC1BC,EADyB,EAAXC,KACEC,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,UAAlC,OACxB,2BACE,gBACEC,IACEJ,EAAY,yCAC0BA,GAClCK,EAENC,IAAI,MAEN,uBAAIL,KACJ,uBAAIC,MAVGC,EADe,IAc1B,OAAO,eAAII,UAAWC,EAAf,SAA0BX,GAClC,EAED,IAEAD,EAAWa,aAAe,CACxBX,KAAM,I,aCqBR,EAxCiB,WACf,OAAwBY,EAAAA,EAAAA,YAAxB,eAAOZ,EAAP,KAAaa,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,wGAEpBJ,GAAa,GAFO,UAGGK,EAAAA,EAAAA,IAAeJ,GAHlB,gBAGZlB,EAHY,EAGZA,KACRa,EAAQb,GAJY,gDAKXuB,EALW,KAKXA,QACTR,EAASQ,GANW,yBAQpBN,GAAa,GARO,4EAAH,qDAYrBI,GACD,GAAE,CAACH,KAGF,gCACGF,IACC,SAAC,KAAD,CAAUQ,MAAM,KAAKC,MAAM,QAAQC,aAAa,aAGlD,SAAC,EAAD,CAAY1B,KAAMA,IAEA,KAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM2B,UAAiBX,IACtB,4EAGDF,IAAS,uBAAIA,MAGnB,C,wLC5CKc,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,sGACVL,EAASM,IAAI,uBADH,uBACzBC,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAT,iBAAuBG,IADlB,uBACpBF,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdG,EAAiB,mCAAG,WAAMC,GAAN,yFACRX,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNQ,MAAAA,KAH2B,uBACvBJ,EADuB,EACvBA,KADuB,kBAOxBA,GAPwB,2CAAH,sDAUjBK,EAAiB,mCAAG,WAAMH,GAAN,yFACRT,EAASM,IAAT,iBAAuBG,EAAvB,aADQ,uBACvBF,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBb,EAAc,mCAAG,WAAMe,GAAN,yFACLT,EAASM,IAAT,iBAAuBG,EAAvB,aADK,uBACpBF,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/ActorsList/actors-list.module.css?60ce","components/ActorsList/ActorsList.jsx","pages/CastPage/CastPage.jsx","shared/services/movies-search-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"actors-list_list__q0jJx\"};","import PropTypes from 'prop-types';\n\nimport css from './actors-list.module.css';\n\nimport defaultImg from 'shared/images/avatar-male.jpg';\n\nconst ActorsList = ({ cast }) => {\n  const castList = cast.map(({ profile_path, name, character, credit_id }) => (\n    <li key={credit_id}>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w200${profile_path}`\n            : defaultImg\n        }\n        alt=\"\"\n      />\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  ));\n  return <ul className={css.list}>{castList}</ul>;\n};\n\nexport default ActorsList;\n\nActorsList.defaultProps = {\n  cast: [],\n};\n\nActorsList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      credit_id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TailSpin } from 'react-loader-spinner';\n\nimport ActorsList from 'components/ActorsList/ActorsList';\n\nimport { fetchMovieCast } from 'shared/services/movies-search-api';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const searchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <TailSpin width=\"50\" color=\"black\" wrapperClass=\"spinner\" />\n      )}\n\n      <ActorsList cast={cast} />\n\n      {cast?.length === 0 && !isLoading && (\n        <h2>Sorry, there is no information about the actors</h2>\n      )}\n\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n"],"names":["ActorsList","castList","cast","map","profile_path","name","character","credit_id","src","defaultImg","alt","className","css","defaultProps","useState","setCast","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","searchMovieCast","fetchMovieCast","message","width","color","wrapperClass","length","instance","axios","baseURL","params","api_key","fetchTrendingMovies","get","data","fetchMovieById","id","fetchMoviesByName","query","fetchMovieReviews"],"sourceRoot":""}