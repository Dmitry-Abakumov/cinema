{"version":3,"file":"static/js/615.22b15b11.chunk.js","mappings":"uQACA,EAAyB,wBAAzB,EAA+D,6BAA/D,EAAqG,wBAArG,EAAoI,sB,SCC9HA,EAAU,SAAC,GAAiB,IAC1BC,EADyB,EAAdC,QACYC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OAC/B,gBAAIC,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,WACE,iBAAMD,UAAWC,EAAjB,sBACCJ,MAEH,cAAGG,UAAWC,EAAd,SAAyBH,MALKC,EADD,IAUjC,OAAO,eAAIC,UAAWC,EAAf,SAAiCP,GACzC,EAED,IAEAD,EAAQS,aAAe,CACrBP,QAAS,I,aClBX,EAA0B,6BC+C1B,EArCoB,WAClB,OAA6BQ,EAAAA,EAAAA,YAA7B,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBJ,GAAa,GAFI,UAGSK,EAAAA,EAAAA,IAAkBJ,GAH3B,gBAGTK,EAHS,EAGTA,QACRR,EAAUQ,GAJO,qDAKRC,QACTC,EAAAA,GAAAA,MAAY,sDANK,yBAQjBR,GAAa,GARI,4EAAH,qDAYlBI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAa,SAAC,KAAD,CAAUU,MAAM,KAAKC,MAAM,OAAOC,aAAa,aAE7D,SAAC,EAAD,CAAStB,QAASA,IAEG,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASuB,UAAiBb,IACzB,eAAIL,UAAWC,EAAf,+DAMP,C,wLC5CKkB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,sGACVL,EAASM,IAAI,uBADH,uBACzBC,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAc,mCAAG,WAAM5B,GAAN,yFACLoB,EAASM,IAAT,iBAAuB1B,IADlB,uBACpB2B,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdE,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNO,MAAAA,KAH2B,uBACvBH,EADuB,EACvBA,KADuB,kBAOxBA,GAPwB,2CAAH,sDAUjBf,EAAiB,mCAAG,WAAMZ,GAAN,yFACRoB,EAASM,IAAT,iBAAuB1B,EAAvB,aADQ,uBACvB2B,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBI,EAAc,mCAAG,WAAM/B,GAAN,yFACLoB,EAASM,IAAT,iBAAuB1B,EAAvB,aADK,uBACpB2B,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.jsx","shared/services/movies-search-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"author\":\"reviews_author__URyxt\",\"rewiewsWrap\":\"reviews_rewiewsWrap__mlz33\",\"rewiew\":\"reviews_rewiew__lYnDh\",\"text\":\"reviews_text__e7pNt\"};","import css from './reviews.module.css';\n\nconst Reviews = ({ reviews }) => {\n  const movieReviews = reviews.map(({ author, content, id }) => (\n    <li className={css.rewiew} key={id}>\n      <p className={css.text}>\n        <span className={css.author}>author: </span>\n        {author}\n      </p>\n      <p className={css.text}>{content}</p>\n    </li>\n  ));\n\n  return <ul className={css.rewiewsWrap}>{movieReviews}</ul>;\n};\n\nexport default Reviews;\n\nReviews.defaultProps = {\n  reviews: [],\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ReviewsPage_message__I1-mx\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TailSpin } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n\nimport Reviews from 'components/Reviews/Reviews';\n\nimport { fetchMovieReviews } from 'shared/services/movies-search-api';\n\nimport css from './ReviewsPage.module.css';\n\nconst RewiewsPage = () => {\n  const [reviews, setReviws] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const searchReviws = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMovieReviews(movieId);\n        setReviws(results);\n      } catch ({ message }) {\n        toast.error('Oops, something went wrong. Try reloading the page');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchReviws();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <TailSpin width=\"50\" color=\"#fff\" wrapperClass=\"spinner\" />}\n\n      <Reviews reviews={reviews} />\n\n      {reviews?.length === 0 && !isLoading && (\n        <h2 className={css.message}>\n          Sorry, but there are no reviews for this movie.\n        </h2>\n      )}\n    </>\n  );\n};\n\nexport default RewiewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n"],"names":["Reviews","movieReviews","reviews","map","author","content","id","className","css","defaultProps","useState","setReviws","isLoading","setIsLoading","movieId","useParams","useEffect","searchReviws","fetchMovieReviews","results","message","toast","width","color","wrapperClass","length","instance","axios","baseURL","params","api_key","fetchTrendingMovies","get","data","fetchMovieById","fetchMoviesByName","query","fetchMovieCast"],"sourceRoot":""}