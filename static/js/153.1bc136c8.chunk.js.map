{"version":3,"file":"static/js/153.1bc136c8.chunk.js","mappings":"sQACA,EAAuB,4B,SC2CvB,EAnCsB,WACpB,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEtBJ,GAAa,GAFS,UAGHK,EAAAA,EAAAA,MAHG,OAGhBC,EAHgB,OAItBR,EAAiBQ,EAAKC,SAJA,gDAKbC,EALa,KAKbA,QACTN,EAASM,GANa,yBAQtBR,GAAa,GARS,4EAAH,qDAYvBI,GACD,GAAE,KAGD,iBAAKK,UAAWC,EAAhB,WACE,2CACCX,IACC,SAAC,KAAD,CAAUY,MAAM,KAAKC,MAAM,QAAQC,aAAa,aAGlD,SAACC,EAAA,EAAD,CAAQC,OAAQlB,IAEfI,IAAS,uBAAIA,MAGnB,C,wDCvCKa,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,GAAWC,EAAAA,EAAAA,MAEXC,EAAaH,EAAOI,KACxB,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAA8BC,EAArC,EAAcC,sBAAd,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMV,GAA1C,SACGK,GAASC,KAFLF,EADX,IASF,OACE,gBAAKX,UAAU,UAAf,UACE,wBAAKS,KAGV,EAED,MAEAJ,EAAOa,aAAe,CACpBZ,OAAQ,G,wLCxBJa,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIA3B,EAAmB,mCAAG,sGACVuB,EAASK,IAAI,uBADH,uBACzB3B,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnB4B,EAAc,mCAAG,WAAMd,GAAN,yFACLQ,EAASK,IAAT,iBAAuBb,IADlB,uBACpBd,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMd6B,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CACNK,MAAAA,KAH2B,uBACvB9B,EADuB,EACvBA,KADuB,kBAOxBA,GAPwB,2CAAH,sDAUjB+B,EAAiB,mCAAG,WAAMjB,GAAN,yFACRQ,EAASK,IAAT,iBAAuBb,EAAvB,aADQ,uBACvBd,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBgC,EAAc,mCAAG,WAAMlB,GAAN,yFACLQ,EAASK,IAAT,iBAAuBb,EAAvB,aADK,uBACpBd,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/HitMoviesPage/HitMoviesPage.module.css?69b2","pages/HitMoviesPage/HitMoviesPage.jsx","shared/components/Movies/Movies.jsx","shared/services/movies-search-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"HitMoviesPage_wrap__VKoQU\"};","import { useEffect, useState } from 'react';\nimport { TailSpin } from 'react-loader-spinner';\n\nimport Movies from 'shared/components/Movies/Movies';\n\nimport { fetchTrendingMovies } from 'shared/services/movies-search-api';\n\nimport css from './HitMoviesPage.module.css';\n\nconst HitMoviesPage = () => {\n  const [initialMovies, setInitialMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchInitialFilms = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMovies();\n        setInitialMovies(data.results);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInitialFilms();\n  }, []);\n\n  return (\n    <div className={css.wrap}>\n      <h2>Trending today</h2>\n      {isLoading && (\n        <TailSpin width=\"50\" color=\"black\" wrapperClass=\"spinner\" />\n      )}\n\n      <Movies movies={initialMovies} />\n\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default HitMoviesPage;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n\n  const moviesList = movies.map(\n    ({ id, title, belongs_to_collection: name }) => (\n      <li key={id}>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          {title || name}\n        </Link>\n      </li>\n    )\n  );\n\n  return (\n    <div className=\"wrapper\">\n      <ul>{moviesList}</ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.defaultProps = {\n  movies: [],\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      belongs_to_collection: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }),\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n"],"names":["useState","initialMovies","setInitialMovies","isLoading","setIsLoading","error","setError","useEffect","fetchInitialFilms","fetchTrendingMovies","data","results","message","className","css","width","color","wrapperClass","Movies","movies","location","useLocation","moviesList","map","id","title","name","belongs_to_collection","to","state","from","defaultProps","instance","axios","baseURL","params","api_key","get","fetchMovieById","fetchMoviesByName","query","fetchMovieReviews","fetchMovieCast"],"sourceRoot":""}