{"version":3,"file":"static/js/680.61c58f35.chunk.js","mappings":"wOA0CA,UAnCiB,WACf,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEtBJ,GAAa,GAFS,UAGHK,EAAAA,EAAAA,MAHG,OAGhBC,EAHgB,OAItBR,EAAiBQ,EAAKC,SAJA,gDAKbC,EALa,KAKbA,QACTN,EAASM,GANa,yBAQtBR,GAAa,GARS,4EAAH,qDAYvBI,GACD,GAAE,KAGD,iCACE,2CACCL,IACC,SAAC,KAAD,CAAUU,MAAM,KAAKC,MAAM,QAAQC,aAAa,aAGlD,SAAC,IAAD,CAAQC,OAAQf,IAEfI,IAAS,uBAAIA,MAGnB,C,wDCrCKY,EAAS,SAAC,GAAgB,IAAdD,EAAa,EAAbA,OACVE,GAAWC,EAAAA,EAAAA,MAEXC,EAAaJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OAC5B,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCF,GACvCG,MAAO,CAAEC,KAAMR,GAFjB,SAIGK,KALID,EADmB,IAW9B,OACE,gBAAKK,UAAU,UAAf,UACE,wBAAKP,KAGV,EAED,MAEAH,EAAOW,aAAe,CACpBZ,OAAQ,G,wLCzBJa,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAxB,EAAmB,mCAAG,sGACVoB,EAASK,IAAI,uBADH,uBACzBxB,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnByB,EAAc,mCAAG,WAAMb,GAAN,yFACLO,EAASK,IAAT,iBAAuBZ,IADlB,uBACpBZ,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMd0B,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CACNK,MAAAA,KAH2B,uBACvB3B,EADuB,EACvBA,KADuB,kBAOxBA,GAPwB,2CAAH,sDAUjB4B,EAAiB,mCAAG,WAAMhB,GAAN,yFACRO,EAASK,IAAT,iBAAuBZ,EAAvB,aADQ,uBACvBZ,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjB6B,EAAc,mCAAG,WAAMjB,GAAN,yFACLO,EAASK,IAAT,iBAAuBZ,EAAvB,aADK,uBACpBZ,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,qD","sources":["pages/HomePage/HomePage.jsx","shared/components/Movies/Movies.jsx","shared/services/movies-search-api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { TailSpin } from 'react-loader-spinner';\n\nimport Movies from 'shared/components/Movies/Movies';\n\nimport { fetchTrendingMovies } from 'shared/services/movies-search-api';\n\nconst HomePage = () => {\n  const [initialMovies, setInitialMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchInitialFilms = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMovies();\n        setInitialMovies(data.results);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInitialFilms();\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      {isLoading && (\n        <TailSpin width=\"50\" color=\"black\" wrapperClass=\"spinner\" />\n      )}\n\n      <Movies movies={initialMovies} />\n\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default HomePage;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n\n  const moviesList = movies.map(({ id, original_title }) => (\n    <li key={id}>\n      <Link\n        to={`/goit-react-hw-05-movies/movies/${id}`}\n        state={{ from: location }}\n      >\n        {original_title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"wrapper\">\n      <ul>{moviesList}</ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.defaultProps = {\n  movies: [],\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n"],"names":["useState","initialMovies","setInitialMovies","isLoading","setIsLoading","error","setError","useEffect","fetchInitialFilms","fetchTrendingMovies","data","results","message","width","color","wrapperClass","movies","Movies","location","useLocation","moviesList","map","id","original_title","to","state","from","className","defaultProps","instance","axios","baseURL","params","api_key","get","fetchMovieById","fetchMoviesByName","query","fetchMovieReviews","fetchMovieCast"],"sourceRoot":""}